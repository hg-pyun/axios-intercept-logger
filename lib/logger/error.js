'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true,
});
exports.errorLogger = errorLogger;
exports.errorLoggerWithoutPromise = errorLoggerWithoutPromise;

var _config = require('../common/config');

var _stringBuilder = _interopRequireDefault(require('../common/string-builder'));

var _print = require('../common/print');

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
}

function errorLoggerWithoutPromise(error, config) {
    const {
        config: { url, method },
        response,
    } = error;
    let status, statusText, data, headers;

    if (response) {
        status = response.status;
        statusText = response.statusText;
        data = response.data;
        headers = response.headers;
    }

    const buildConfig = config ? config : (0, _config.mergeWithGlobalConfig)(config);
    const stringBuilder = new _stringBuilder.default(buildConfig);
    const log = stringBuilder
        .makePrefix('Error')
        .makeDateFormat()
        .makeUrl(url)
        .makeMethod(method)
        .makeStatus(status, statusText)
        .makeHeader(headers)
        .makeData(data)
        .build();
    (0, _print.printLog)(log);
    return error;
}

function errorLogger(error) {
    return Promise.reject(errorLoggerWithoutPromise(error));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sb2dnZXIvZXJyb3IudHMiXSwibmFtZXMiOlsiZXJyb3JMb2dnZXJXaXRob3V0UHJvbWlzZSIsImVycm9yIiwiY29uZmlnIiwidXJsIiwibWV0aG9kIiwicmVzcG9uc2UiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwiZGF0YSIsImhlYWRlcnMiLCJidWlsZENvbmZpZyIsInN0cmluZ0J1aWxkZXIiLCJTdHJpbmdCdWlsZGVyIiwibG9nIiwibWFrZVByZWZpeCIsIm1ha2VEYXRlRm9ybWF0IiwibWFrZVVybCIsIm1ha2VNZXRob2QiLCJtYWtlU3RhdHVzIiwibWFrZUhlYWRlciIsIm1ha2VEYXRhIiwiYnVpbGQiLCJlcnJvckxvZ2dlciIsIlByb21pc2UiLCJyZWplY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBRUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxTQUFTQSx5QkFBVCxDQUFtQ0MsS0FBbkMsRUFBc0RDLE1BQXRELEVBQStFO0FBRTNFLFFBQU07QUFBQ0EsSUFBQUEsTUFBTSxFQUFFO0FBQUNDLE1BQUFBLEdBQUQ7QUFBTUMsTUFBQUE7QUFBTixLQUFUO0FBQXdCQyxJQUFBQTtBQUF4QixNQUFvQ0osS0FBMUM7QUFFQSxNQUFJSyxNQUFKLEVBQVlDLFVBQVosRUFBd0JDLElBQXhCLEVBQThCQyxPQUE5Qjs7QUFDQSxNQUFHSixRQUFILEVBQVk7QUFDUkMsSUFBQUEsTUFBTSxHQUFHRCxRQUFRLENBQUNDLE1BQWxCO0FBQ0FDLElBQUFBLFVBQVUsR0FBR0YsUUFBUSxDQUFDRSxVQUF0QjtBQUNBQyxJQUFBQSxJQUFJLEdBQUdILFFBQVEsQ0FBQ0csSUFBaEI7QUFDQUMsSUFBQUEsT0FBTyxHQUFHSixRQUFRLENBQUNJLE9BQW5CO0FBQ0g7O0FBRUQsUUFBTUMsV0FBVyxHQUFHUixNQUFNLEdBQUdBLE1BQUgsR0FBWSxtQ0FBc0JBLE1BQXRCLENBQXRDO0FBRUEsUUFBTVMsYUFBYSxHQUFHLElBQUlDLHNCQUFKLENBQWtCRixXQUFsQixDQUF0QjtBQUNBLFFBQU1HLEdBQUcsR0FBR0YsYUFBYSxDQUNwQkcsVUFETyxDQUNJLE9BREosRUFFUEMsY0FGTyxHQUdQQyxPQUhPLENBR0NiLEdBSEQsRUFJUGMsVUFKTyxDQUlJYixNQUpKLEVBS1BjLFVBTE8sQ0FLSVosTUFMSixFQUtZQyxVQUxaLEVBTVBZLFVBTk8sQ0FNSVYsT0FOSixFQU9QVyxRQVBPLENBT0VaLElBUEYsRUFRUGEsS0FSTyxFQUFaO0FBVUEsdUJBQVNSLEdBQVQ7QUFFQSxTQUFPWixLQUFQO0FBQ0g7O0FBRUQsU0FBU3FCLFdBQVQsQ0FBcUJyQixLQUFyQixFQUF3QztBQUNwQyxTQUFPc0IsT0FBTyxDQUFDQyxNQUFSLENBQWV4Qix5QkFBeUIsQ0FBQ0MsS0FBRCxDQUF4QyxDQUFQO0FBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBeGlvc0Vycm9yIH0gZnJvbSAnYXhpb3MnO1xuaW1wb3J0IHsgRXJyb3JMb2dDb25maWcgfSBmcm9tICcuLi9jb21tb24vdHlwZXMnO1xuaW1wb3J0IHsgbWVyZ2VXaXRoR2xvYmFsQ29uZmlnIH0gZnJvbSAnLi4vY29tbW9uL2NvbmZpZyc7XG5pbXBvcnQgU3RyaW5nQnVpbGRlciBmcm9tICcuLi9jb21tb24vc3RyaW5nLWJ1aWxkZXInO1xuaW1wb3J0IHsgcHJpbnRMb2cgfSBmcm9tICcuLi9jb21tb24vcHJpbnQnO1xuXG5mdW5jdGlvbiBlcnJvckxvZ2dlcldpdGhvdXRQcm9taXNlKGVycm9yOiBBeGlvc0Vycm9yLCBjb25maWc/OiBFcnJvckxvZ0NvbmZpZykge1xuXG4gICAgY29uc3Qge2NvbmZpZzoge3VybCwgbWV0aG9kfSwgcmVzcG9uc2V9ID0gZXJyb3I7XG5cbiAgICBsZXQgc3RhdHVzLCBzdGF0dXNUZXh0LCBkYXRhLCBoZWFkZXJzO1xuICAgIGlmKHJlc3BvbnNlKXtcbiAgICAgICAgc3RhdHVzID0gcmVzcG9uc2Uuc3RhdHVzO1xuICAgICAgICBzdGF0dXNUZXh0ID0gcmVzcG9uc2Uuc3RhdHVzVGV4dDtcbiAgICAgICAgZGF0YSA9IHJlc3BvbnNlLmRhdGE7XG4gICAgICAgIGhlYWRlcnMgPSByZXNwb25zZS5oZWFkZXJzO1xuICAgIH1cblxuICAgIGNvbnN0IGJ1aWxkQ29uZmlnID0gY29uZmlnID8gY29uZmlnIDogbWVyZ2VXaXRoR2xvYmFsQ29uZmlnKGNvbmZpZyk7XG5cbiAgICBjb25zdCBzdHJpbmdCdWlsZGVyID0gbmV3IFN0cmluZ0J1aWxkZXIoYnVpbGRDb25maWcpO1xuICAgIGNvbnN0IGxvZyA9IHN0cmluZ0J1aWxkZXJcbiAgICAgICAgLm1ha2VQcmVmaXgoJ0Vycm9yJylcbiAgICAgICAgLm1ha2VEYXRlRm9ybWF0KClcbiAgICAgICAgLm1ha2VVcmwodXJsKVxuICAgICAgICAubWFrZU1ldGhvZChtZXRob2QpXG4gICAgICAgIC5tYWtlU3RhdHVzKHN0YXR1cywgc3RhdHVzVGV4dClcbiAgICAgICAgLm1ha2VIZWFkZXIoaGVhZGVycylcbiAgICAgICAgLm1ha2VEYXRhKGRhdGEpXG4gICAgICAgIC5idWlsZCgpO1xuXG4gICAgcHJpbnRMb2cobG9nKTtcblxuICAgIHJldHVybiBlcnJvcjtcbn1cblxuZnVuY3Rpb24gZXJyb3JMb2dnZXIoZXJyb3I6IEF4aW9zRXJyb3IpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3JMb2dnZXJXaXRob3V0UHJvbWlzZShlcnJvcikpO1xufVxuXG5leHBvcnQgeyBlcnJvckxvZ2dlciwgZXJyb3JMb2dnZXJXaXRob3V0UHJvbWlzZSB9OyJdfQ==
